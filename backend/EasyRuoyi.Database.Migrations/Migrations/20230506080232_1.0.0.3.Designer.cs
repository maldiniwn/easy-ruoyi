// <auto-generated />
using System;
using EasyRuoyi.EntityFramework.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EasyRuoyi.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20230506080232_1.0.0.3")]
    partial class _1003
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EasyRuoyi.Core.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id");

                    b.Property<DateTime?>("BornDate")
                        .HasColumnType("date")
                        .HasComment("出生日期");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人名称");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("软删除时间");

                    b.Property<int>("EnumGender")
                        .HasColumnType("int")
                        .HasComment("性别");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("软删除标记");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("姓名");

                    b.Property<string>("SID")
                        .HasMaxLength(18)
                        .HasColumnType("varchar")
                        .HasComment("身份证");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasComment("手机号");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("修改时间");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("修改人Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人名称");

                    b.HasKey("Id");

                    b.ToTable("Employee", t =>
                        {
                            t.HasComment("员工");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumGender = 1,
                            IsDeleted = false,
                            Name = "超级管理员",
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        });
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id");

                    b.Property<string>("Component")
                        .HasMaxLength(128)
                        .HasColumnType("varchar")
                        .HasComment("组件路径");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人名称");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("软删除时间");

                    b.Property<int>("EnumMenuType")
                        .HasColumnType("int")
                        .HasComment("菜单类型");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("全路径");

                    b.Property<bool>("IsCache")
                        .HasColumnType("bit")
                        .HasComment("是否缓存");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("软删除标记");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit")
                        .HasComment("是否显示");

                    b.Property<string>("MenuIcon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasComment("菜单图标");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<Guid?>("PId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级");

                    b.Property<string>("Path")
                        .HasMaxLength(128)
                        .HasColumnType("varchar")
                        .HasComment("路由地址");

                    b.Property<string>("PermissionCode")
                        .HasMaxLength(128)
                        .HasColumnType("varchar")
                        .HasComment("权限标识");

                    b.Property<string>("RouterName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasComment("路由名称");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("修改时间");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("修改人Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人名称");

                    b.HasKey("Id");

                    b.ToTable("Menu", t =>
                        {
                            t.HasComment("菜单");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-4647-842f-702c52ca50c5"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 0,
                            FullPath = "系统管理/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "system",
                            Name = "系统管理",
                            Path = "/system",
                            PermissionCode = "",
                            RouterName = "System",
                            Sort = 1,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466c-8fa3-68324e69dbca"),
                            Component = "system/user/index",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 1,
                            FullPath = "系统管理/用户管理/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "user",
                            Name = "用户管理",
                            PId = new Guid("08daa9c2-cf08-4647-842f-702c52ca50c5"),
                            Path = "/system/user",
                            PermissionCode = "system:user:list",
                            RouterName = "User",
                            Sort = 1,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466d-8aa7-61d152a82a08"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/用户管理/用户查询/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "用户查询",
                            PId = new Guid("08daa9c2-cf08-466c-8fa3-68324e69dbca"),
                            Path = "",
                            PermissionCode = "system:user:query",
                            Sort = 1,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466d-8c11-4841922dd430"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/用户管理/用户新增/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "用户新增",
                            PId = new Guid("08daa9c2-cf08-466c-8fa3-68324e69dbca"),
                            Path = "",
                            PermissionCode = "system:user:add",
                            Sort = 2,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466d-8f69-e9af248a7e9a"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/用户管理/用户修改/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "用户修改",
                            PId = new Guid("08daa9c2-cf08-466c-8fa3-68324e69dbca"),
                            Path = "",
                            PermissionCode = "system:user:edit",
                            Sort = 3,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466e-8246-642217ecf1fe"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/用户管理/用户删除/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "用户删除",
                            PId = new Guid("08daa9c2-cf08-466c-8fa3-68324e69dbca"),
                            Path = "",
                            PermissionCode = "system:user:remove",
                            Sort = 4,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466e-8499-700ce0a16017"),
                            Component = "system/role/index",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 1,
                            FullPath = "系统管理/角色管理/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "peoples",
                            Name = "角色管理",
                            PId = new Guid("08daa9c2-cf08-4647-842f-702c52ca50c5"),
                            Path = "/system/role",
                            PermissionCode = "system:role:list",
                            RouterName = "Role",
                            Sort = 2,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466e-87b8-b44f3652ddc8"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/角色管理/角色查询/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "角色查询",
                            PId = new Guid("08daa9c2-cf08-466e-8499-700ce0a16017"),
                            Path = "",
                            PermissionCode = "system:role:query",
                            Sort = 1,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466e-8957-bc339ab2fb1c"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/角色管理/角色新增/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "角色新增",
                            PId = new Guid("08daa9c2-cf08-466e-8499-700ce0a16017"),
                            Path = "",
                            PermissionCode = "system:role:add",
                            Sort = 2,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466f-8af0-850d768cf158"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/角色管理/角色修改/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "角色修改",
                            PId = new Guid("08daa9c2-cf08-466e-8499-700ce0a16017"),
                            Path = "",
                            PermissionCode = "system:role:edit",
                            Sort = 3,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466f-8c16-266c6e0fb639"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/角色管理/角色删除/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "角色删除",
                            PId = new Guid("08daa9c2-cf08-466e-8499-700ce0a16017"),
                            Path = "",
                            PermissionCode = "system:role:remove",
                            Sort = 4,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-466f-8f97-cc651bdb79e5"),
                            Component = "system/menu/index",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 1,
                            FullPath = "系统管理/菜单管理/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "tree-table",
                            Name = "菜单管理",
                            PId = new Guid("08daa9c2-cf08-4647-842f-702c52ca50c5"),
                            Path = "/system/menu",
                            PermissionCode = "system:menu:list",
                            RouterName = "Menu",
                            Sort = 3,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-4670-8139-e1682f10bae7"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/菜单管理/菜单查询/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "菜单查询",
                            PId = new Guid("08daa9c2-cf08-466f-8f97-cc651bdb79e5"),
                            Path = "",
                            PermissionCode = "system:menu:query",
                            Sort = 1,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-4670-8351-1628fbce7366"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/菜单管理/菜单新增/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "菜单新增",
                            PId = new Guid("08daa9c2-cf08-466f-8f97-cc651bdb79e5"),
                            Path = "",
                            PermissionCode = "system:menu:add",
                            Sort = 2,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-4670-85aa-f81d31913533"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/菜单管理/菜单修改/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "菜单修改",
                            PId = new Guid("08daa9c2-cf08-466f-8f97-cc651bdb79e5"),
                            Path = "",
                            PermissionCode = "system:menu:edit",
                            Sort = 3,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        },
                        new
                        {
                            Id = new Guid("08daa9c2-cf08-4670-8e03-f77d69f154a8"),
                            Component = "",
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EnumMenuType = 2,
                            FullPath = "系统管理/菜单管理/菜单删除/",
                            IsCache = false,
                            IsDeleted = false,
                            IsEnable = true,
                            IsShow = true,
                            MenuIcon = "",
                            Name = "菜单删除",
                            PId = new Guid("08daa9c2-cf08-466f-8f97-cc651bdb79e5"),
                            Path = "",
                            PermissionCode = "system:menu:remove",
                            Sort = 4,
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        });
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人名称");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("软删除时间");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("软删除标记");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用（0=未启用，1=启用）");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("角色编号");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("修改时间");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("修改人Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人名称");

                    b.HasKey("Id");

                    b.ToTable("Role", t =>
                        {
                            t.HasComment("角色");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("0df02f30-9cdb-5cb4-970a-316e5212bb34"),
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            Description = "超级管理员角色，不能修改、删除",
                            IsDeleted = false,
                            IsEnable = true,
                            Name = "超级管理员",
                            RoleCode = "SuperAdmin",
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员"
                        });
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.RoleMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人名称");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("软删除时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("软删除标记");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("菜单主键");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("角色主键");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("修改时间");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("修改人Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人名称");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenu", t =>
                        {
                            t.HasComment("菜单角色关系");
                        });
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.RoleUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人名称");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("软删除时间");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("软删除标记");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("角色主键");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("修改时间");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("修改人Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人名称");

                    b.Property<Guid>("UserInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("用户主键");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("RoleUser", t =>
                        {
                            t.HasComment("用户角色关系");
                        });
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.SysFile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人名称");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("软删除时间");

                    b.Property<string>("FileObjectName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasComment("存储文件名称");

                    b.Property<string>("FileOriginName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasComment("原始文件名称");

                    b.Property<string>("FilePath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("存储路径");

                    b.Property<string>("FileSizeKb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("文件大小kb");

                    b.Property<string>("FileSuffix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("文件后缀");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("软删除标记");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("修改时间");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("修改人Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人名称");

                    b.HasKey("Id");

                    b.ToTable("SysFile", t =>
                        {
                            t.HasComment("文件信息");
                        });
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Id");

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("创建时间");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("创建人Id");

                    b.Property<string>("CreatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("创建人名称");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("软删除时间");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("密码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("软删除标记");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用（0=未启用，1=启用）");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar")
                        .HasComment("密码");

                    b.Property<DateTimeOffset>("UpdatedTime")
                        .HasColumnType("datetimeoffset")
                        .HasComment("修改时间");

                    b.Property<Guid?>("UpdatedUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("修改人Id");

                    b.Property<string>("UpdatedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人名称");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasComment("用户名");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("UserName");

                    b.ToTable("UserInfo", t =>
                        {
                            t.HasComment("用户");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            CreatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            CreatedUserName = "超级管理员",
                            EmployeeId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            IsDeleted = false,
                            IsEnable = true,
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            UpdatedTime = new DateTimeOffset(new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            UpdatedUserId = new Guid("292f2321-577a-a7a5-4389-4a0e4a801fc3"),
                            UpdatedUserName = "超级管理员",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.RoleMenu", b =>
                {
                    b.HasOne("EasyRuoyi.Core.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EasyRuoyi.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.RoleUser", b =>
                {
                    b.HasOne("EasyRuoyi.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EasyRuoyi.Core.Entities.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("EasyRuoyi.Core.Entities.UserInfo", b =>
                {
                    b.HasOne("EasyRuoyi.Core.Entities.Employee", "Employee")
                        .WithOne()
                        .HasForeignKey("EasyRuoyi.Core.Entities.UserInfo", "EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
